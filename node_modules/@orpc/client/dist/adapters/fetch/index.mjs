import { toFetchRequest, toStandardLazyResponse } from '@orpc/standard-server-fetch';
import '@orpc/shared';
import { c as StandardRPCLink } from '../../shared/client.DpICn1BD.mjs';
import '@orpc/standard-server';
import '../../shared/client.CRWEpqLB.mjs';

class LinkFetchClient {
  fetch;
  toFetchRequestOptions;
  constructor(options) {
    this.fetch = options?.fetch ?? globalThis.fetch.bind(globalThis);
    this.toFetchRequestOptions = options;
  }
  async call(request, options, path, input) {
    const fetchRequest = toFetchRequest(request, this.toFetchRequestOptions);
    const fetchResponse = await this.fetch(fetchRequest, { redirect: "manual" }, options, path, input);
    const lazyResponse = toStandardLazyResponse(fetchResponse);
    return lazyResponse;
  }
}

class RPCLink extends StandardRPCLink {
  constructor(options) {
    const linkClient = new LinkFetchClient(options);
    super(linkClient, options);
  }
}

export { LinkFetchClient, RPCLink };
