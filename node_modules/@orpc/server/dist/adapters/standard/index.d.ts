import { c as StandardCodec, d as StandardParams, e as StandardMatcher, f as StandardMatchResult } from '../../shared/server.YZzrREz9.js';
export { C as CompositeStandardHandlerPlugin, g as StandardHandleOptions, h as StandardHandleResult, i as StandardHandler, S as StandardHandlerInterceptorOptions, b as StandardHandlerOptions, a as StandardHandlerPlugin } from '../../shared/server.YZzrREz9.js';
import { ORPCError, HTTPPath } from '@orpc/client';
import { StandardRPCSerializer } from '@orpc/client/standard';
import { StandardLazyRequest, StandardResponse } from '@orpc/standard-server';
import { h as AnyProcedure, f as AnyRouter } from '../../shared/server.DPWk5pjW.js';
export { a as StandardRPCHandler, S as StandardRPCHandlerOptions } from '../../shared/server.Cy1vfSiG.js';
import '@orpc/contract';
import '@orpc/shared';

declare class StandardRPCCodec implements StandardCodec {
    private readonly serializer;
    constructor(serializer: StandardRPCSerializer);
    decode(request: StandardLazyRequest, _params: StandardParams | undefined, _procedure: AnyProcedure): Promise<unknown>;
    encode(output: unknown, _procedure: AnyProcedure): StandardResponse;
    encodeError(error: ORPCError<any, any>): StandardResponse;
}

declare class StandardRPCMatcher implements StandardMatcher {
    private readonly tree;
    private pendingRouters;
    init(router: AnyRouter, path?: readonly string[]): void;
    match(_method: string, pathname: HTTPPath): Promise<StandardMatchResult>;
}

export { StandardCodec, StandardMatchResult, StandardMatcher, StandardParams, StandardRPCCodec, StandardRPCMatcher };
