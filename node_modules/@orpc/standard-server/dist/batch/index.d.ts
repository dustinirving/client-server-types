import { S as StandardHeaders, b as StandardRequest, d as StandardResponse } from '../shared/standard-server.R_NaHlxw.js';

interface ToBatchRequestOptions {
    url: URL;
    method: 'GET' | 'POST';
    headers: StandardHeaders;
    requests: readonly StandardRequest[];
}
declare function toBatchRequest(options: ToBatchRequestOptions): StandardRequest;
declare function parseBatchRequest(request: StandardRequest): StandardRequest[];

interface BatchResponseBodyItem extends StandardResponse {
    index: number;
}
interface ToBatchResponseOptions extends StandardResponse {
    body: AsyncIteratorObject<BatchResponseBodyItem>;
}
declare function toBatchResponse(options: ToBatchResponseOptions): StandardResponse;
declare function parseBatchResponse(response: StandardResponse): AsyncGenerator<BatchResponseBodyItem>;

declare function toBatchAbortSignal(signals: readonly (AbortSignal | undefined)[]): AbortSignal | undefined;

export { parseBatchRequest, parseBatchResponse, toBatchAbortSignal, toBatchRequest, toBatchResponse };
export type { BatchResponseBodyItem, ToBatchRequestOptions, ToBatchResponseOptions };
